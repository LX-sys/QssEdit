# -*- coding: utf-8 -*-

# self implementation generated from reading ui file 'newControl.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget,QGridLayout


from core.dynamic_control.dynamic_control import DynamicControl


# 控件名称
ALL_Control = {
    "buttons":["QPushButton","QToolButton","QRadioButton","QCheckBox",
           "QCommandLinkButton","QDialogButtonBox"],
    "input_widget":["QLineEdit","QTextEdit","QComboBox","QPlainTextEdit",
                    "QSpinBox","QDoubleSpinBox","QTimeEdit","QDateEdit",
                    "QDateTimeEdit","QDial","QScrollBar","QSlider",
                    "QKeySequenceEdit"],
    "display_widget":["QLabel","QTextBrowser","QGraphicsView","QCalendarWidget",
                      "QLcdNumber","QProgressBar","Line","QOpenGLWidget"],
    "containers":["QGroupBox","QScrollArea","QTabWidget","QStackedWidget",
                  "QFrame","QWidget","QMdiArea","QDockWidget"],
    "item_view":["QListWidget","QTreeWidget","QTableView"]
}


class NewControl(QWidget):
    # 创建成功的信号
    successfuled = QtCore.pyqtSignal(dict)

    def __init__(self, *args,**kwargs) -> None:
        super().__init__(*args,**kwargs)
        self.setupUi()

        # 控件工厂
        self.__dc = DynamicControl()

        # 当前控件
        self.current_control = None

        self.myEvent()
        self.Init()


    def Init(self):
        for name in ALL_Control.keys():
            self.comboBox_parent.addItem(name)

    def setupUi(self):
        self.setObjectName("self")
        self.resize(502, 252)
        self.horizontalLayout = QtWidgets.QHBoxLayout(self)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox = QtWidgets.QGroupBox(self)
        self.groupBox.setMinimumSize(QtCore.QSize(191, 211))
        self.groupBox.setMaximumSize(QtCore.QSize(191, 211))
        self.groupBox.setObjectName("groupBox")
        self.comboBox_parent = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_parent.setGeometry(QtCore.QRect(15, 20, 161, 31))
        self.comboBox_parent.setObjectName("comboBox_2")
        self.buttonBox = QtWidgets.QDialogButtonBox(self.groupBox)
        self.buttonBox.setGeometry(QtCore.QRect(19, 180, 156, 23))
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(15, 60, 161, 31))
        self.comboBox.setObjectName("comboBox")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(19, 100, 41, 31))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(19, 140, 151, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.groupBox)

        self.frame = QtWidgets.QFrame(self)
        self.gbox = QGridLayout()
        self.frame.setLayout(self.gbox)
        self.frame.setMinimumSize(QtCore.QSize(281, 211))
        self.frame.setMaximumSize(QtCore.QSize(281, 211))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout.addWidget(self.frame)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def addBox(self,name):
        self.comboBox.addItem(name)

    # 当父控件发生变化时，更新子控件
    def p_TextChanged(self,text):
        child = ALL_Control[text]
        self.comboBox.clear()
        for name in child:
            self.comboBox.addItem(name)

    # 设置在右侧窗口
    def setRightWidget(self,control:QWidget):
        if control:
            if self.gbox.count():
                self.gbox.removeWidget(self.gbox.itemAt(0).widget())
            # 添加到Qframe窗口上
            self.gbox.addWidget(control)
            self.current_control = control

    # 子控件
    def c_TextChanged(self,text):
        control = self.__dc.getControl(text)
        self.setRightWidget(control)

    def buttonBox_Event(self):
        text = self.lineEdit.text()
        if self.current_control and hasattr(self.current_control,"setText"):
            self.current_control.setText(text)

            # 提示创建成功
            QtWidgets.QMessageBox.information(self,"提示","创建成功")
            info = {
                "name":text,
                "control":self.comboBox.currentText()
            }
            self.successfuled.emit(info)
            self.lineEdit.setText("")


    def myEvent(self):
        self.comboBox_parent.currentTextChanged.connect(self.p_TextChanged)
        self.comboBox.currentTextChanged.connect(self.c_TextChanged)

        # 输入信息
        self.lineEdit.returnPressed.connect(self.buttonBox_Event)
        self.buttonBox.accepted.connect(self.buttonBox_Event)


    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "新建"))
        self.groupBox.setTitle(_translate("self", "选择"))
        self.label.setText(_translate("self", "名称"))

if __name__ == '__main__':
    app = QApplication(sys.argv)

    win = NewControl()
    win.show()

    sys.exit(app.exec_())
    